name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ main ]

jobs:
  windows-build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Create build directory
        run: mkdir -p dist/windows

      - name: Build with PyInstaller
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon=./icon.ico --add-data "icon.ico;." --name OllamaAIChat src/main.py

      - name: Move executable
        run: |
          move dist/OllamaAIChat.exe dist/windows/

      - name: Get version for Windows
        if: startsWith(github.ref, 'refs/tags/v')
        id: get_win_version
        shell: bash
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Rename Windows executable
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          Rename-Item dist/windows/OllamaAIChat.exe OllamaAIChat-Windows-${{ steps.get_win_version.outputs.VERSION }}.exe

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OllamaAIChat-Windows
          path: dist/windows
          retention-days: 5

  macos-build:
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          brew install create-dmg

      - name: Create build directory
        run: mkdir -p dist/macos

      - name: Build with PyInstaller
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon=./icon.icns --add-data "icon.icns:." --name OllamaAIChat src/main.py --collect-all certifi

      - name: Move application
        run: |
          mv dist/OllamaAIChat.app dist/macos/
          chmod +x dist/macos/OllamaAIChat.app/Contents/MacOS/OllamaAIChat

      - name: Create DMG
        run: |
          create-dmg \
            --volname "OllamaAIChat" \
            --volicon "icon.icns" \
            --window-pos 200 120 \
            --window-size 600 400 \
            --icon-size 100 \
            --icon "OllamaAIChat.app" 175 190 \
            --hide-extension "OllamaAIChat.app" \
            --app-drop-link 425 190 \
            --no-internet-enable \
            "dist/OllamaAIChat.dmg" \
            "dist/macos/OllamaAIChat.app"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OllamaAIChat-macOS
          path: dist
          retention-days: 5

  create-release:
    needs: [windows-build, macos-build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get version
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: OllamaAIChat-Windows
          path: dist/windows
          
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: OllamaAIChat-macOS
          path: dist
          
      - name: Rename macOS DMG
        run: |
          mv dist/OllamaAIChat.dmg dist/OllamaAIChat-macOS-${{ steps.get_version.outputs.VERSION }}.dmg
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            Release ${{ steps.get_version.outputs.VERSION }}
          files: |
            dist/windows/OllamaAIChat-Windows-${{ steps.get_version.outputs.VERSION }}.exe
            dist/OllamaAIChat-macOS-${{ steps.get_version.outputs.VERSION }}.dmg
          draft: false
          prerelease: false