name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ main ]

jobs:
  windows-build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Create build directory
        run: mkdir -p dist/windows

      - name: Build with PyInstaller
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon=./icon.ico --add-data "icon.ico;." --name OllamaAIChat src/main.py

      - name: Move executable
        run: |
          move dist/OllamaAIChat.exe dist/windows/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OllamaAIChat-Windows
          path: dist/windows
          retention-days: 5

  macos-build:
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Create build directory
        run: mkdir -p dist/macos

      - name: Build with PyInstaller
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon=./icon.icns --add-data "icon.icns:." --name OllamaAIChat src/main.py --collect-all certifi

      - name: Move application
        run: |
          mv dist/OllamaAIChat.app dist/macos/
          chmod +x dist/macos/OllamaAIChat.app/Contents/MacOS/OllamaAIChat

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OllamaAIChat-macOS
          path: dist/macos
          retention-days: 5

  create-release:
    needs: [windows-build, macos-build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get version
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: OllamaAIChat-Windows
          path: dist/windows
          
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: OllamaAIChat-macOS
          path: dist/macos
          
      - name: Package Windows App
        run: |
          cd dist/windows
          zip -r ../OllamaAIChat-Windows-${{ steps.get_version.outputs.VERSION }}.zip OllamaAIChat.exe
          cd ../..
          
      - name: Package macOS App
        run: |
          cd dist/macos
          zip -r ../OllamaAIChat-macOS-${{ steps.get_version.outputs.VERSION }}.zip OllamaAIChat.app
          cd ../..
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            Release ${{ steps.get_version.outputs.VERSION }}
            
            ### 下载
            - Windows: OllamaAIChat-Windows.zip (解压后双击 OllamaAIChat.exe 运行)
            - macOS: OllamaAIChat-macOS.zip (解压后双击 OllamaAIChat.app 运行)
          files: |
            dist/OllamaAIChat-Windows-${{ steps.get_version.outputs.VERSION }}.zip
            dist/OllamaAIChat-macOS-${{ steps.get_version.outputs.VERSION }}.zip
          draft: false
          prerelease: false